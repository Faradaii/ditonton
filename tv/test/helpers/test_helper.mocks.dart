// Mocks generated by Mockito 5.4.5 from annotations
// in tv/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;
import 'dart:convert' as _i23;
import 'dart:typed_data' as _i24;

import 'package:core/common/failure.dart' as _i11;
import 'package:core/core.dart' as _i6;
import 'package:dartz/dartz.dart' as _i2;
import 'package:http/io_client.dart' as _i7;
import 'package:http/src/base_request.dart' as _i22;
import 'package:http/src/response.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i20;
import 'package:tv/data/datasources/db/database_tv.dart' as _i21;
import 'package:tv/data/datasources/tv_local_data_source.dart' as _i18;
import 'package:tv/data/datasources/tv_remote_data_source.dart' as _i16;
import 'package:tv/data/models/tv/tv_detail/episode_response.dart' as _i5;
import 'package:tv/data/models/tv/tv_detail/season_response.dart' as _i4;
import 'package:tv/data/models/tv/tv_detail/tv_detail_model.dart' as _i3;
import 'package:tv/data/models/tv/tv_model.dart' as _i17;
import 'package:tv/data/models/tv/tv_table.dart' as _i19;
import 'package:tv/domain/entities/tv/episode/episode.dart' as _i15;
import 'package:tv/domain/entities/tv/season/season_detail.dart' as _i14;
import 'package:tv/domain/entities/tv/tv.dart' as _i12;
import 'package:tv/domain/entities/tv/tv_detail.dart' as _i13;
import 'package:tv/domain/repositories/tv_repository.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTvSeriesDetailResponse_1 extends _i1.SmartFake
    implements _i3.TvSeriesDetailResponse {
  _FakeTvSeriesDetailResponse_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeSeasonResponse_2 extends _i1.SmartFake
    implements _i4.SeasonResponse {
  _FakeSeasonResponse_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeEpisodeResponse_3 extends _i1.SmartFake
    implements _i5.EpisodeResponse {
  _FakeEpisodeResponse_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeDatabaseHelper_4 extends _i1.SmartFake
    implements _i6.DatabaseHelper {
  _FakeDatabaseHelper_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeIOClient_5 extends _i1.SmartFake implements _i7.IOClient {
  _FakeIOClient_5(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeIOStreamedResponse_6 extends _i1.SmartFake
    implements _i7.IOStreamedResponse {
  _FakeIOStreamedResponse_6(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_7 extends _i1.SmartFake implements _i8.Response {
  _FakeResponse_7(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i9.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>
      getNowPlayingTvSeries() => (super.noSuchMethod(
            Invocation.method(#getNowPlayingTvSeries, []),
            returnValue: _i10
                .Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>.value(
              _FakeEither_0<_i11.Failure, List<_i12.TvSeries>>(
                this,
                Invocation.method(#getNowPlayingTvSeries, []),
              ),
            ),
          ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>
      getPopularTvSeries() => (super.noSuchMethod(
            Invocation.method(#getPopularTvSeries, []),
            returnValue: _i10
                .Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>.value(
              _FakeEither_0<_i11.Failure, List<_i12.TvSeries>>(
                this,
                Invocation.method(#getPopularTvSeries, []),
              ),
            ),
          ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>
      getTopRatedTvSeries() => (super.noSuchMethod(
            Invocation.method(#getTopRatedTvSeries, []),
            returnValue: _i10
                .Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>.value(
              _FakeEither_0<_i11.Failure, List<_i12.TvSeries>>(
                this,
                Invocation.method(#getTopRatedTvSeries, []),
              ),
            ),
          ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i13.TvSeriesDetail>> getTvSeriesDetail(
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#getTvSeriesDetail, [id]),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, _i13.TvSeriesDetail>>.value(
          _FakeEither_0<_i11.Failure, _i13.TvSeriesDetail>(
            this,
            Invocation.method(#getTvSeriesDetail, [id]),
          ),
        ),
      ) as _i10.Future<_i2.Either<_i11.Failure, _i13.TvSeriesDetail>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i14.Season>> getTvSeriesSeasonDetail({
    required int? id,
    required int? seasonNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#getTvSeriesSeasonDetail, [], {
          #id: id,
          #seasonNumber: seasonNumber,
        }),
        returnValue: _i10.Future<_i2.Either<_i11.Failure, _i14.Season>>.value(
          _FakeEither_0<_i11.Failure, _i14.Season>(
            this,
            Invocation.method(#getTvSeriesSeasonDetail, [], {
              #id: id,
              #seasonNumber: seasonNumber,
            }),
          ),
        ),
      ) as _i10.Future<_i2.Either<_i11.Failure, _i14.Season>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, _i15.Episode>>
      getTvSeriesSeasonEpisodeDetail({
    required int? id,
    required int? seasonNumber,
    required int? episodeNumber,
  }) =>
          (super.noSuchMethod(
            Invocation.method(#getTvSeriesSeasonEpisodeDetail, [], {
              #id: id,
              #seasonNumber: seasonNumber,
              #episodeNumber: episodeNumber,
            }),
            returnValue:
                _i10.Future<_i2.Either<_i11.Failure, _i15.Episode>>.value(
              _FakeEither_0<_i11.Failure, _i15.Episode>(
                this,
                Invocation.method(#getTvSeriesSeasonEpisodeDetail, [], {
                  #id: id,
                  #seasonNumber: seasonNumber,
                  #episodeNumber: episodeNumber,
                }),
              ),
            ),
          ) as _i10.Future<_i2.Either<_i11.Failure, _i15.Episode>>);

  @override
  _i10.Future<
      _i2.Either<_i11.Failure, List<_i12.TvSeries>>> getTvSeriesRecommendations(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(#getTvSeriesRecommendations, [id]),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>.value(
          _FakeEither_0<_i11.Failure, List<_i12.TvSeries>>(
            this,
            Invocation.method(#getTvSeriesRecommendations, [id]),
          ),
        ),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>> searchTvSeries(
    String? query,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#searchTvSeries, [query]),
        returnValue:
            _i10.Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>.value(
          _FakeEither_0<_i11.Failure, List<_i12.TvSeries>>(
            this,
            Invocation.method(#searchTvSeries, [query]),
          ),
        ),
      ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> saveWatchlist(
    _i13.TvSeriesDetail? tvSeries,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#saveWatchlist, [tvSeries]),
        returnValue: _i10.Future<_i2.Either<_i11.Failure, String>>.value(
          _FakeEither_0<_i11.Failure, String>(
            this,
            Invocation.method(#saveWatchlist, [tvSeries]),
          ),
        ),
      ) as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, String>> removeWatchlist(
    _i13.TvSeriesDetail? tvSeries,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#removeWatchlist, [tvSeries]),
        returnValue: _i10.Future<_i2.Either<_i11.Failure, String>>.value(
          _FakeEither_0<_i11.Failure, String>(
            this,
            Invocation.method(#removeWatchlist, [tvSeries]),
          ),
        ),
      ) as _i10.Future<_i2.Either<_i11.Failure, String>>);

  @override
  _i10.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(#isAddedToWatchlist, [id]),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);

  @override
  _i10.Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>
      getWatchlistTvSeries() => (super.noSuchMethod(
            Invocation.method(#getWatchlistTvSeries, []),
            returnValue: _i10
                .Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>.value(
              _FakeEither_0<_i11.Failure, List<_i12.TvSeries>>(
                this,
                Invocation.method(#getWatchlistTvSeries, []),
              ),
            ),
          ) as _i10.Future<_i2.Either<_i11.Failure, List<_i12.TvSeries>>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i16.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<List<_i17.TvSeriesModel>> getNowPlayingTv() =>
      (super.noSuchMethod(
        Invocation.method(#getNowPlayingTv, []),
        returnValue: _i10.Future<List<_i17.TvSeriesModel>>.value(
          <_i17.TvSeriesModel>[],
        ),
      ) as _i10.Future<List<_i17.TvSeriesModel>>);

  @override
  _i10.Future<List<_i17.TvSeriesModel>> getPopularTv() => (super.noSuchMethod(
        Invocation.method(#getPopularTv, []),
        returnValue: _i10.Future<List<_i17.TvSeriesModel>>.value(
          <_i17.TvSeriesModel>[],
        ),
      ) as _i10.Future<List<_i17.TvSeriesModel>>);

  @override
  _i10.Future<List<_i17.TvSeriesModel>> getTopRatedTv() => (super.noSuchMethod(
        Invocation.method(#getTopRatedTv, []),
        returnValue: _i10.Future<List<_i17.TvSeriesModel>>.value(
          <_i17.TvSeriesModel>[],
        ),
      ) as _i10.Future<List<_i17.TvSeriesModel>>);

  @override
  _i10.Future<_i3.TvSeriesDetailResponse> getTvDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(#getTvDetail, [id]),
        returnValue: _i10.Future<_i3.TvSeriesDetailResponse>.value(
          _FakeTvSeriesDetailResponse_1(
            this,
            Invocation.method(#getTvDetail, [id]),
          ),
        ),
      ) as _i10.Future<_i3.TvSeriesDetailResponse>);

  @override
  _i10.Future<List<_i17.TvSeriesModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(#getTvRecommendations, [id]),
        returnValue: _i10.Future<List<_i17.TvSeriesModel>>.value(
          <_i17.TvSeriesModel>[],
        ),
      ) as _i10.Future<List<_i17.TvSeriesModel>>);

  @override
  _i10.Future<List<_i17.TvSeriesModel>> searchTv(String? query) =>
      (super.noSuchMethod(
        Invocation.method(#searchTv, [query]),
        returnValue: _i10.Future<List<_i17.TvSeriesModel>>.value(
          <_i17.TvSeriesModel>[],
        ),
      ) as _i10.Future<List<_i17.TvSeriesModel>>);

  @override
  _i10.Future<_i4.SeasonResponse> getTvDetailSeason({
    required int? id,
    required int? seasonNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#getTvDetailSeason, [], {
          #id: id,
          #seasonNumber: seasonNumber,
        }),
        returnValue: _i10.Future<_i4.SeasonResponse>.value(
          _FakeSeasonResponse_2(
            this,
            Invocation.method(#getTvDetailSeason, [], {
              #id: id,
              #seasonNumber: seasonNumber,
            }),
          ),
        ),
      ) as _i10.Future<_i4.SeasonResponse>);

  @override
  _i10.Future<_i5.EpisodeResponse> getTvDetailSeasonEpisode({
    required int? id,
    required int? seasonNumber,
    required int? episodeNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#getTvDetailSeasonEpisode, [], {
          #id: id,
          #seasonNumber: seasonNumber,
          #episodeNumber: episodeNumber,
        }),
        returnValue: _i10.Future<_i5.EpisodeResponse>.value(
          _FakeEpisodeResponse_3(
            this,
            Invocation.method(#getTvDetailSeasonEpisode, [], {
              #id: id,
              #seasonNumber: seasonNumber,
              #episodeNumber: episodeNumber,
            }),
          ),
        ),
      ) as _i10.Future<_i5.EpisodeResponse>);
}

/// A class which mocks [TvLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvLocalDataSource extends _i1.Mock implements _i18.TvLocalDataSource {
  MockTvLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<String> insertWatchlist(_i19.TvTable? tv) => (super.noSuchMethod(
        Invocation.method(#insertWatchlist, [tv]),
        returnValue: _i10.Future<String>.value(
          _i20.dummyValue<String>(
            this,
            Invocation.method(#insertWatchlist, [tv]),
          ),
        ),
      ) as _i10.Future<String>);

  @override
  _i10.Future<String> removeWatchlist(_i19.TvTable? tv) => (super.noSuchMethod(
        Invocation.method(#removeWatchlist, [tv]),
        returnValue: _i10.Future<String>.value(
          _i20.dummyValue<String>(
            this,
            Invocation.method(#removeWatchlist, [tv]),
          ),
        ),
      ) as _i10.Future<String>);

  @override
  _i10.Future<_i19.TvTable?> getTvById(int? id) => (super.noSuchMethod(
        Invocation.method(#getTvById, [id]),
        returnValue: _i10.Future<_i19.TvTable?>.value(),
      ) as _i10.Future<_i19.TvTable?>);

  @override
  _i10.Future<List<_i19.TvTable>> getWatchlistTv() => (super.noSuchMethod(
        Invocation.method(#getWatchlistTv, []),
        returnValue: _i10.Future<List<_i19.TvTable>>.value(
          <_i19.TvTable>[],
        ),
      ) as _i10.Future<List<_i19.TvTable>>);
}

/// A class which mocks [DatabaseTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseTv extends _i1.Mock implements _i21.DatabaseTv {
  MockDatabaseTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.DatabaseHelper get databaseHelper => (super.noSuchMethod(
        Invocation.getter(#databaseHelper),
        returnValue: _FakeDatabaseHelper_4(
          this,
          Invocation.getter(#databaseHelper),
        ),
      ) as _i6.DatabaseHelper);

  @override
  _i10.Future<int> insertWatchlistTv(_i19.TvTable? tv) => (super.noSuchMethod(
        Invocation.method(#insertWatchlistTv, [tv]),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> removeWatchlistTv(_i19.TvTable? tv) => (super.noSuchMethod(
        Invocation.method(#removeWatchlistTv, [tv]),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<List<Map<String, dynamic>?>?> getTvById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(#getTvById, [id]),
        returnValue: _i10.Future<List<Map<String, dynamic>?>?>.value(),
      ) as _i10.Future<List<Map<String, dynamic>?>?>);

  @override
  _i10.Future<List<Map<String, dynamic>>> getWatchlistTv() =>
      (super.noSuchMethod(
        Invocation.method(#getWatchlistTv, []),
        returnValue: _i10.Future<List<Map<String, dynamic>>>.value(
          <Map<String, dynamic>>[],
        ),
      ) as _i10.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [NetworkHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkHelper extends _i1.Mock implements _i6.NetworkHelper {
  MockNetworkHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.IOClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeIOClient_5(this, Invocation.getter(#client)),
      ) as _i7.IOClient);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i6.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<int> insert(String? table, Map<String, dynamic>? values) =>
      (super.noSuchMethod(
        Invocation.method(#insert, [table, values]),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<int> delete(
    String? table, {
    String? where,
    List<Object?>? whereArgs,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
          {#where: where, #whereArgs: whereArgs},
        ),
        returnValue: _i10.Future<int>.value(0),
      ) as _i10.Future<int>);

  @override
  _i10.Future<List<Map<String, dynamic>>> query(
    String? table, {
    String? where,
    List<Object?>? whereArgs,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [table],
          {#where: where, #whereArgs: whereArgs},
        ),
        returnValue: _i10.Future<List<Map<String, dynamic>>>.value(
          <Map<String, dynamic>>[],
        ),
      ) as _i10.Future<List<Map<String, dynamic>>>);

  @override
  _i10.Future<List<Map<String, dynamic>?>?> queryGetOne(
    String? table, {
    String? where,
    List<Object?>? whereArgs,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryGetOne,
          [table],
          {#where: where, #whereArgs: whereArgs},
        ),
        returnValue: _i10.Future<List<Map<String, dynamic>?>?>.value(),
      ) as _i10.Future<List<Map<String, dynamic>?>?>);
}

/// A class which mocks [IOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOClient extends _i1.Mock implements _i7.IOClient {
  MockIOClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i7.IOStreamedResponse> send(_i22.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(#send, [request]),
        returnValue: _i10.Future<_i7.IOStreamedResponse>.value(
          _FakeIOStreamedResponse_6(
            this,
            Invocation.method(#send, [request]),
          ),
        ),
      ) as _i10.Future<_i7.IOStreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(#close, []),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Future<_i8.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
        Invocation.method(#head, [url], {#headers: headers}),
        returnValue: _i10.Future<_i8.Response>.value(
          _FakeResponse_7(
            this,
            Invocation.method(#head, [url], {#headers: headers}),
          ),
        ),
      ) as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
        Invocation.method(#get, [url], {#headers: headers}),
        returnValue: _i10.Future<_i8.Response>.value(
          _FakeResponse_7(
            this,
            Invocation.method(#get, [url], {#headers: headers}),
          ),
        ),
      ) as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i23.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {#headers: headers, #body: body, #encoding: encoding},
        ),
        returnValue: _i10.Future<_i8.Response>.value(
          _FakeResponse_7(
            this,
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
          ),
        ),
      ) as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i23.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {#headers: headers, #body: body, #encoding: encoding},
        ),
        returnValue: _i10.Future<_i8.Response>.value(
          _FakeResponse_7(
            this,
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
          ),
        ),
      ) as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i23.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {#headers: headers, #body: body, #encoding: encoding},
        ),
        returnValue: _i10.Future<_i8.Response>.value(
          _FakeResponse_7(
            this,
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
          ),
        ),
      ) as _i10.Future<_i8.Response>);

  @override
  _i10.Future<_i8.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i23.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {#headers: headers, #body: body, #encoding: encoding},
        ),
        returnValue: _i10.Future<_i8.Response>.value(
          _FakeResponse_7(
            this,
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
          ),
        ),
      ) as _i10.Future<_i8.Response>);

  @override
  _i10.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
        Invocation.method(#read, [url], {#headers: headers}),
        returnValue: _i10.Future<String>.value(
          _i20.dummyValue<String>(
            this,
            Invocation.method(#read, [url], {#headers: headers}),
          ),
        ),
      ) as _i10.Future<String>);

  @override
  _i10.Future<_i24.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(#readBytes, [url], {#headers: headers}),
        returnValue: _i10.Future<_i24.Uint8List>.value(_i24.Uint8List(0)),
      ) as _i10.Future<_i24.Uint8List>);
}
